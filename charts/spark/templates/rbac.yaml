{{- if .Values.rbac.create -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "spark.fullname" . }}
  labels:
    {{- include "spark.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "spark.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "spark.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "spark.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ include "spark.fullname" . }}
  apiGroup: rbac.authorization.k8s.io

---
# A work around for RoleBinding for service account from operator namespace to have Role on apps namespace
# May need a cluster role for the account?
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spark-role-binding-from-operator
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "spark.fullname" . }}
subjects:
  - kind: ServiceAccount
    name: spark-operator-spark-on-k8s-operator
    namespace: spark-operator
{{- end }}